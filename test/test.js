// Generated by CoffeeScript 1.6.2
(function() {
  var RedisTagging, should;

  should = require("should");

  RedisTagging = require("../index");

  describe('Redis-Tagging Test', function() {
    var bucket1, bucket2, rt;

    rt = null;
    bucket1 = "test";
    bucket2 = "TEST";
    before(function(done) {
      done();
    });
    after(function(done) {
      done();
    });
    it('get a RedisTagging instance', function(done) {
      rt = new RedisTagging();
      rt.should.be.an.instanceOf(RedisTagging);
      done();
    });
    describe('Basics', function() {
      it('Set tags for an item', function(done) {
        rt.set({
          bucket: bucket1,
          id: "123",
          score: 10,
          tags: ["just", "testing"]
        }, function(err, resp) {
          should.not.exist(err);
          resp.should.equal(true);
          done();
        });
      });
      it('Get tags for this item', function(done) {
        rt.get({
          bucket: bucket1,
          id: "123"
        }, function(err, resp) {
          should.not.exist(err);
          resp.should.include('just');
          resp.should.include('testing');
          done();
        });
      });
      it('Set tags for an item with extended chars', function(done) {
        rt.set({
          bucket: bucket1,
          id: "456",
          score: 10,
          tags: ["äöüÖÄÜ§$%& ,.-+#áéóíáà~", "   testing   "]
        }, function(err, resp) {
          should.not.exist(err);
          resp.should.equal(true);
          done();
        });
      });
      it('Get tags for this item', function(done) {
        rt.get({
          bucket: bucket1,
          id: "456"
        }, function(err, resp) {
          should.not.exist(err);
          resp.should.include('äöüÖÄÜ§$%& ,.-+#áéóíáà~');
          resp.should.include('   testing   ');
          done();
        });
      });
    });
    describe('CLEANUP', function() {
      return it('Remove all data', function(done) {
        done();
      });
    });
  });

}).call(this);
